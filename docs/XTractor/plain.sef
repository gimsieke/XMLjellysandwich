<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.7.0.15" timeStamp="2017-10-19T11:23:22.885-04:00" target="JS">
 <co id="0" binds="">
  <function name="Q{http://coko.foundation/xsweet}safeClass" line="137" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" eval="8" flags="pU" as="xs:string" slots="2">
   <arg name="val" as="attribute()"/>
   <let role="body" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="139" var="safer" as="xs:string" slot="1" eval="8">
    <fn name="replace">
     <cvUntyped to="xs:string">
      <data>
       <varRef name="val" slot="0"/>
      </data>
     </cvUntyped>
     <str val="[\.:\C]"/>
     <str val=""/>
     <str val=""/>
    </fn>
    <cvUntyped line="142" to="xs:string">
     <cast as="xs:untypedAtomic" emptiable="0">
      <fn name="string-join">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <mergeAdj>
          <sequence>
           <choose>
            <fn name="matches">
             <varRef name="safer" slot="1"/>
             <str val="^\I"/>
             <str val=""/>
            </fn>
            <valueOf flags="S">
             <str val="_"/>
            </valueOf>
           </choose>
           <valueOf line="143">
            <varRef name="safer" slot="1"/>
           </valueOf>
          </sequence>
         </mergeAdj>
        </data>
       </convert>
       <str val=""/>
      </fn>
     </cast>
    </cvUntyped>
   </let>
  </function>
 </co>
 <co id="1" binds="2 3">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onchange" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="1" minImp="0" slots="0" flags="os" line="29" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeSet role="match" type="element()">
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="29" name="id">
      <str val="file"/>
     </fn>
    </p.nodeSet>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="32">
     <resultDoc global="#&#xA;#Thu Oct 19 11:23:22 EDT 2017&#xA;indent=no&#xA;omit-xml-declaration=yes&#xA;method=xml&#xA;" local="#&#xA;#Thu Oct 19 11:23:22 EDT 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}append-content&#xA;">
      <str role="href" val="#xmljellysandwich_header"/>
      <elem role="content" line="35" name="h4" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
       <sequence>
        <valueOf flags="l">
         <str val="... reading file "/>
        </valueOf>
        <valueOf flags="l">
         <fn name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:find" type="array(*)">
             <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:get" type="item()*">
              <dot type="element()"/>
              <str val="files"/>
             </ifCall>
             <str val="name"/>
            </ifCall>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </resultDoc>
     <copyOf line="42" flags="vsc">
      <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="41" name="ixsl:call" type="item()*">
       <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg1995143020" bSlot="0"/>
       <str val="loadFromZip"/>
       <arrayBlock line="31">
        <ifCall xmlns:map="http://www.w3.org/2005/xpath-functions/map" name="map:get" type="item()*">
         <treat as="map(*)" jsTest="return SaxonJS.U.isMap(item)" diag="0|0||map:get">
          <check card="1" diag="0|0||map:get">
           <ifCall name="ixsl:get" type="item()*">
            <check card="?" diag="0|0||ixsl:get">
             <fn name="id">
              <str val="file"/>
             </fn>
            </check>
            <str val="files"/>
           </ifCall>
          </check>
         </treat>
         <str val="0"/>
        </ifCall>
        <str val="word/document.xml"/>
       </arrayBlock>
      </ifCall>
     </copyOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="1">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="4" binds="3">
  <template name="Q{}format-components" flags="os" line="286" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" slots="0">
   <applyT role="body" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="287" flags="t" bSlot="0">
    <slash role="select" simple="1">
     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
      <dot flags="a"/>
     </treat>
     <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
    </slash>
   </applyT>
  </template>
 </co>
 <co id="5" binds="3">
  <mode name="Q{}flag" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="1" minImp="0" slots="0" flags="os" line="74" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="75">
     <elem name="span" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
      <sequence>
       <att name="style" flags="l">
        <str val="color: green; font-size: 70%; font-family: sans-serif"/>
       </att>
       <valueOf line="76" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
     <applyT line="78" flags="ci" bSlot="0">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
     <elem line="79" name="span" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
      <sequence>
       <att name="style" flags="l">
        <str val="color: green; font-size: 70%; font-family: sans-serif"/>
       </att>
       <valueOf line="80" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="2" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="0">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="84" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.any role="match"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="85" name="span" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="style" flags="l">
       <str val="color: blue"/>
      </att>
      <valueOf line="86" flags="l">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <dot/>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id="6" binds="">
  <globalVariable name="Q{}relations-doc" type="document-node()" line="51" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <doc vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="-1" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <empty/>
   </doc>
  </globalVariable>
 </co>
 <co id="7" binds="">
  <globalVariable name="Q{}styles" type="document-node()" line="44" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <doc vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="-1" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <empty/>
   </doc>
  </globalVariable>
 </co>
 <co id="8" binds="3">
  <mode name="Q{}css-property" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="0">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="0" flags="os" line="651" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='before';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='spacing';"/>
    </p.withUpper>
    <valueOf role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="651" flags="S">
     <str val="margin-top"/>
    </valueOf>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="os" line="653" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}left)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='left';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ind';"/>
    </p.withUpper>
    <valueOf role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="653" flags="S">
     <str val="margin-left"/>
    </valueOf>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="5" rank="1" minImp="0" slots="0" flags="os" line="655" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}firstLine)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='firstLine';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ind';"/>
    </p.withUpper>
    <valueOf role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="655" flags="S">
     <str val="text-indent"/>
    </valueOf>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="1" minImp="0" slots="0" flags="os" line="652" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}after)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='after';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='spacing';"/>
    </p.withUpper>
    <valueOf role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="652" flags="S">
     <str val="margin-bottom"/>
    </valueOf>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="4" rank="1" minImp="0" slots="0" flags="os" line="654" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}right)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='right';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ind';"/>
    </p.withUpper>
    <valueOf role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="654" flags="S">
     <str val="margin-right"/>
    </valueOf>
   </templateRule>
  </mode>
 </co>
 <co id="9" binds="9 10 3">
  <mode name="Q{}writeCSS" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="3" flags="os" line="676" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styles';"/>
    </p.withUpper>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="679">
     <param name="visited" slot="0">
      <empty role="select"/>
      <supplied role="conversion" slot="0"/>
     </param>
     <applyT line="682" mode="Q{}writeCSS" bSlot="0">
      <fn role="select" name="key">
       <str val="styles-by-id"/>
       <let var="vv:loc1006101069" as="node()*" slot="1" eval="3">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="17|0||">
         <varRef name="visited" slot="0"/>
        </treat>
        <data>
         <filter flags="b">
          <slash>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}basedOn)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='basedOn';"/>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </slash>
          <fn name="empty">
           <among op="among">
            <docOrder intra="1">
             <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)"/>
            </docOrder>
            <varRef name="vv:loc1006101069" slot="1"/>
           </among>
          </fn>
         </filter>
        </data>
       </let>
      </fn>
      <withParam name="visited" as="item()+">
       <sequence line="683">
        <varRef name="visited" slot="0"/>
        <dot type="element()"/>
       </sequence>
      </withParam>
     </applyT>
     <let line="686" var="css-produced" as="xs:string*" slot="2" eval="3">
      <treat line="687" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|css-produced">
       <cvUntyped to="xs:string">
        <data>
         <applyT mode="Q{}transcribe-css" bSlot="1">
          <axis role="select" name="child" nodeTest="(element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr) | element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';};return a()||b();"/>
         </applyT>
        </data>
       </cvUntyped>
      </treat>
      <sequence line="693">
       <valueOf>
        <str val="; "/>
       </valueOf>
       <valueOf>
        <str val="/* "/>
       </valueOf>
       <valueOf>
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styleId';"/>
         </data>
        </convert>
       </valueOf>
       <valueOf>
        <str val="*/ "/>
       </valueOf>
       <valueOf line="697">
        <fn name="string-join">
         <filter flags="b">
          <varRef name="css-produced" slot="2"/>
          <fn name="matches">
           <dot type="xs:string"/>
           <str val="\S"/>
           <str val=""/>
          </fn>
         </filter>
         <str val="; "/>
        </fn>
       </valueOf>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="2">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="11" binds="">
  <globalVariable name="Q{}border-map" type="element(Q{http://coko.foundation/xsweet}border, Q{http://www.w3.org/2001/XMLSchema}untyped)+" line="230" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" visibility="PRIVATE" flags="x" jsAcceptor="function test(item) {function a() {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='border';};function b() {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;};return a()&amp;&amp;b();};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n&gt;=1;};">
   <sequence vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="231">
    <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="none"/>
      </att>
      <elem line="232" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="none"/>
       </att>
      </elem>
      <elem line="233" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="nil"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="236" name="xsw:border">
     <att name="css-style" flags="l">
      <str val="hidden"/>
     </att>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="238" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="dotted"/>
      </att>
      <elem line="239" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="dotted"/>
       </att>
      </elem>
      <elem line="240" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="dotDotDash"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="243" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="dashed"/>
      </att>
      <elem line="244" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="dotDash"/>
       </att>
      </elem>
      <elem line="245" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="dashSmallGap"/>
       </att>
      </elem>
      <elem line="246" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="dashed"/>
       </att>
      </elem>
      <elem line="247" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="dashDotStroked"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="250" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="solid"/>
      </att>
      <elem line="251" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="wave"/>
       </att>
      </elem>
      <elem line="252" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="single"/>
       </att>
      </elem>
      <elem line="253" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thick"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="256" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="double"/>
      </att>
      <elem line="257" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="doubleWave"/>
       </att>
      </elem>
      <elem line="258" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="double"/>
       </att>
      </elem>
      <elem line="259" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="triple"/>
       </att>
      </elem>
      <elem line="260" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thickThinLargeGap"/>
       </att>
      </elem>
      <elem line="261" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thickThinMediumGap"/>
       </att>
      </elem>
      <elem line="262" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thickThinSmallGap"/>
       </att>
      </elem>
      <elem line="263" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thinThickLargeGap"/>
       </att>
      </elem>
      <elem line="264" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thinThickMediumGap"/>
       </att>
      </elem>
      <elem line="265" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thinThickSmallGap"/>
       </att>
      </elem>
      <elem line="266" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thinThickThinLargeGap"/>
       </att>
      </elem>
      <elem line="267" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thinThickThinMediumGap"/>
       </att>
      </elem>
      <elem line="268" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="thinThickThinSmallGap"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="271" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="groove"/>
      </att>
      <elem line="272" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="threeDEngrave"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="275" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="ridge"/>
      </att>
      <elem line="276" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="threeDEmboss"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="279" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="inset"/>
      </att>
      <elem line="280" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="inset"/>
       </att>
      </elem>
     </sequence>
    </elem>
    <elem xmlns:xsw="http://coko.foundation/xsweet" line="283" name="xsw:border">
     <sequence>
      <att name="css-style" flags="l">
       <str val="outset"/>
      </att>
      <elem line="284" name="xsw:border" flags="l">
       <att name="ms-style" flags="l">
        <str val="outset"/>
       </att>
      </elem>
     </sequence>
    </elem>
   </sequence>
  </globalVariable>
 </co>
 <co id="12" binds="5">
  <template name="Q{}XTractor-acquire" flags="os" line="21" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" slots="0">
   <resultDoc role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="22" global="#&#xA;#Thu Oct 19 11:23:22 EDT 2017&#xA;indent=no&#xA;omit-xml-declaration=yes&#xA;method=xml&#xA;" local="#&#xA;#Thu Oct 19 11:23:22 EDT 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
    <str role="href" val="#XTractor"/>
    <applyT role="content" line="23" mode="Q{}flag" flags="i" bSlot="0">
     <slash role="select" simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="13|0|XTTE0510|">
       <dot flags="a"/>
      </treat>
      <axis name="child" nodeTest="node()" jsTest="return true;"/>
     </slash>
    </applyT>
   </resultDoc>
  </template>
 </co>
 <co id="10" binds="13 3">
  <mode name="Q{}transcribe-css" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="2" flags="os" as="xs:string?" line="624" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="626" var="styles-tree" as="document-node()" slot="1" eval="7">
     <doc line="627" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}build-properties" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <cvUntyped line="644" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <slash>
         <slash line="636" simple="1">
          <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
           <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
            <forEach>
             <slash simple="1">
              <varRef name="styles-tree" slot="1"/>
              <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
             </slash>
             <compAtt line="637" flags="l">
              <fn role="name" name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </data>
               </convert>
              </fn>
              <convert role="select" from="xs:untypedAtomic" to="xs:string">
               <data>
                <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
               </data>
              </convert>
             </compAtt>
            </forEach>
           </elem>
          </treat>
          <axis line="644" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
         <fn name="concat">
          <fn name="name">
           <dot type="attribute()"/>
          </fn>
          <str val=": "/>
          <data>
           <dot type="attribute()"/>
          </data>
         </fn>
        </slash>
        <str val="; "/>
       </fn>
      </cast>
     </cvUntyped>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="2" flags="os" as="xs:string?" line="624" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="626" var="styles-tree" as="document-node()" slot="1" eval="7">
     <doc line="627" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}build-properties" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <cvUntyped line="644" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <slash>
         <slash line="636" simple="1">
          <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
           <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
            <forEach>
             <slash simple="1">
              <varRef name="styles-tree" slot="1"/>
              <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
             </slash>
             <compAtt line="637" flags="l">
              <fn role="name" name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </data>
               </convert>
              </fn>
              <convert role="select" from="xs:untypedAtomic" to="xs:string">
               <data>
                <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
               </data>
              </convert>
             </compAtt>
            </forEach>
           </elem>
          </treat>
          <axis line="644" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
         <fn name="concat">
          <fn name="name">
           <dot type="attribute()"/>
          </fn>
          <str val=": "/>
          <data>
           <dot type="attribute()"/>
          </data>
         </fn>
        </slash>
        <str val="; "/>
       </fn>
      </cast>
     </cvUntyped>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="2" flags="os" as="xs:string?" line="624" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='style';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="626" var="styles-tree" as="document-node()" slot="1" eval="7">
     <doc line="627" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}build-properties" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <cvUntyped line="644" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <slash>
         <slash line="636" simple="1">
          <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
           <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
            <forEach>
             <slash simple="1">
              <varRef name="styles-tree" slot="1"/>
              <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
             </slash>
             <compAtt line="637" flags="l">
              <fn role="name" name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </data>
               </convert>
              </fn>
              <convert role="select" from="xs:untypedAtomic" to="xs:string">
               <data>
                <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
               </data>
              </convert>
             </compAtt>
            </forEach>
           </elem>
          </treat>
          <axis line="644" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
         <fn name="concat">
          <fn name="name">
           <dot type="attribute()"/>
          </fn>
          <str val=": "/>
          <data>
           <dot type="attribute()"/>
          </data>
         </fn>
        </slash>
        <str val="; "/>
       </fn>
      </cast>
     </cvUntyped>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="1">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="14" binds="">
  <function name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" line="68" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" eval="7" flags="pU" as="item()*" slots="2">
   <arg name="who" as="element()"/>
   <arg name="ilk" as="xs:string"/>
   <gcEE role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="65" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
    <forEach>
     <fn name="tokenize">
      <cvUntyped to="xs:string">
       <data>
        <slash line="71" simple="1">
         <varRef name="who" slot="0"/>
         <axis line="65" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </slash>
       </data>
      </cvUntyped>
      <str val="\s+"/>
      <str val=""/>
     </fn>
     <fn name="lower-case">
      <dot type="xs:string"/>
     </fn>
    </forEach>
    <varRef line="71" name="ilk" slot="1"/>
   </gcEE>
  </function>
 </co>
 <co id="13" binds="7 7 7 7 3 7 8 15 16">
  <mode name="Q{}build-properties" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="29" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="158" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="160" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/* | w:tcBorders/*&#34; mode=&#34;build-properties&#34;">
     <applyT flags="ct" bSlot="0">
      <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="29" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="158" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="160" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/* | w:tcBorders/*&#34; mode=&#34;build-properties&#34;">
     <applyT flags="ct" bSlot="0">
      <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="469" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="18" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)" line="582" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}b)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='b';"/>
     <fn vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="582" name="not">
      <gcEE op="=" card="N:1" comp="CCC">
       <literal count="2">
        <str val="0"/>
        <str val="none"/>
       </literal>
       <data>
        <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
       </data>
      </gcEE>
     </fn>
    </p.withPredicate>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="583" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:b[not(@w:val=('0','none'))]&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="font-weight"/>
       </att>
       <valueOf flags="Sl">
        <str val="bold"/>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="24" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)" line="605" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}smallCaps)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='smallCaps';"/>
     <fn vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="605" name="not">
      <gcEE op="=" card="N:1" comp="CCC">
       <literal count="2">
        <str val="0"/>
        <str val="none"/>
       </literal>
       <data>
        <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
       </data>
      </gcEE>
     </fn>
    </p.withPredicate>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="606" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:smallCaps[not(@w:val=('0','none'))]&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="font-variant"/>
       </att>
       <valueOf flags="Sl">
        <str val="small-caps"/>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="0" flags="os" as="element()+" line="471" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="473" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="7|0|XTTE0505|match=&#34;w:pPr&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <applyT flags="c" bSlot="0">
       <docOrder role="select" intra="0">
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pStyle';"/>
         <fn name="key">
          <str val="styles-by-id"/>
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </data>
          <gVarRef name="Q{}styles" bSlot="0"/>
         </fn>
        </slash>
       </docOrder>
      </applyT>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="476" name="xsw:paraStyles">
       <sequence>
        <forEach>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pStyle';"/>
         <att line="477" name="calls" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
          </convert>
         </att>
        </forEach>
        <forEach line="479">
         <slash>
          <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
          <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}basedOn)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='basedOn';"/>
         </slash>
         <att line="480" name="based-on" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
          </convert>
         </att>
        </forEach>
        <applyT line="482" flags="ci" bSlot="0">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="26" rank="1" minImp="0" slots="0" flags="os" as="element()+" line="98" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="100" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="7|0|XTTE0505|match=&#34;w:tblPr | w:tcPr&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <applyT flags="c" bSlot="0">
       <docOrder role="select" intra="0">
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblStyle';"/>
         <fn name="key">
          <str val="styles-by-id"/>
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </data>
          <gVarRef name="Q{}styles" bSlot="1"/>
         </fn>
        </slash>
       </docOrder>
      </applyT>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="104" name="xsw:cellStyles">
       <sequence>
        <elem name="xsw:prop" flags="l">
         <sequence>
          <att name="name" flags="l">
           <str val="vertical-align"/>
          </att>
          <valueOf flags="Sl">
           <str val="top"/>
          </valueOf>
         </sequence>
        </elem>
        <applyT line="112" flags="ci" bSlot="0">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="10" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="539" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}numPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='numPr';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="540" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:numPr&#34; mode=&#34;build-properties&#34;">
     <applyT flags="cti" bSlot="0">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="20" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)" line="592" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}u)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='u';"/>
     <fn vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="592" name="not">
      <gcEE op="=" card="N:1" comp="CCC">
       <literal count="2">
        <str val="0"/>
        <str val="none"/>
       </literal>
       <data>
        <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
       </data>
      </gcEE>
     </fn>
    </p.withPredicate>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="593" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:u[not(@w:val=('0','none'))]&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="text-decoration"/>
       </att>
       <valueOf flags="Sl">
        <str val="underline"/>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="27" rank="1" minImp="0" slots="3" flags="os" line="116" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="117" var="here" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" slot="0" eval="7">
     <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)"/>
     <let line="118" var="vv:loc1647082243" as="element()*" indexable="true" slot="1" eval="3">
      <slash line="121" simple="1">
       <varRef name="here" slot="0"/>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
      <forEach>
       <literal count="4">
        <str val="top"/>
        <str val="bottom"/>
        <str val="left"/>
        <str val="right"/>
       </literal>
       <let line="119" var="position" as="xs:string" slot="2" eval="7">
        <dot type="xs:string"/>
        <applyT line="121" flags="c" bSlot="0">
         <indexedFilter role="select" line="118" use="left">
          <varRef name="vv:loc1647082243" slot="1"/>
          <vc line="121" op="eq" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <fn name="local-name">
            <dot type="element()"/>
           </fn>
           <varRef name="position" slot="2"/>
          </vc>
         </indexedFilter>
         <withParam name="position" flags="t" as="xs:string">
          <varRef line="122" name="position" slot="2"/>
         </withParam>
        </applyT>
       </let>
      </forEach>
     </let>
    </let>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="15" rank="4" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="563" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}jc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='jc';"/>
     <gcEE vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="563" op="=" card="N:1" comp="CCC">
      <literal count="4">
       <str val="left"/>
       <str val="right"/>
       <str val="center"/>
       <str val="both"/>
      </literal>
      <data>
       <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
      </data>
     </gcEE>
    </p.withPredicate>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="564" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:jc[@w:val=('left','right','center','both')]&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="text-align"/>
       </att>
       <valueOf line="565" flags="l">
        <fn name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <choose>
           <gc op="=" card="1:1" comp="CCC">
            <data>
             <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
            </data>
            <str val="both"/>
           </gc>
           <str val="justify"/>
           <true/>
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
          </choose>
         </convert>
         <str val=" "/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="2" minImp="0" slots="0" flags="os" line="488" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="0" flags="os" as="element()+" line="492" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="494" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="7|0|XTTE0505|match=&#34;w:rPr&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <applyT flags="c" bSlot="0">
       <docOrder role="select" intra="0">
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rStyle';"/>
         <fn name="key">
          <str val="styles-by-id"/>
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </data>
          <gVarRef name="Q{}styles" bSlot="2"/>
         </fn>
        </slash>
       </docOrder>
      </applyT>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="497" name="xsw:runStyles">
       <sequence>
        <forEach>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rStyle';"/>
         <att line="498" name="calls" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
          </convert>
         </att>
        </forEach>
        <forEach line="500">
         <slash>
          <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
          <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}basedOn)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='basedOn';"/>
         </slash>
         <att line="501" name="based-on" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
          </convert>
         </att>
        </forEach>
        <applyT line="503" flags="ci" bSlot="0">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="551" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='spacing';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="552" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:spacing&#34; mode=&#34;build-properties&#34;">
     <applyT flags="ct" bSlot="0">
      <axis role="select" name="attribute" nodeTest="(attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}before) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}after))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='before';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='after';};return a()||b();"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="23" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="601" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sz)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='sz';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="602" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:sz&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="font-size"/>
       </att>
       <valueOf flags="l">
        <convert from="xs:double" to="xs:string">
         <arith op="div" calc="d/d">
          <cvUntyped to="xs:double">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
          </cvUntyped>
          <int val="2"/>
         </arith>
        </convert>
       </valueOf>
       <valueOf flags="Sl">
        <str val="pt"/>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="523" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ind';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="524" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:ind&#34; mode=&#34;build-properties&#34;">
     <applyT flags="ct" bSlot="0">
      <axis role="select" name="attribute" nodeTest="(((attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}left) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}right)) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}firstLine)) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hanging))" jsTest="function a() {function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='left';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='right';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='firstLine';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='hanging';};return a()||b();"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="529" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}outlineLvl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='outlineLvl';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="530" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:outlineLvl&#34; mode=&#34;build-properties&#34;">
     <applyT flags="ct" bSlot="0">
      <axis role="select" name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="19" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)" line="587" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}i)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='i';"/>
     <fn vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="587" name="not">
      <gcEE op="=" card="N:1" comp="CCC">
       <literal count="2">
        <str val="0"/>
        <str val="none"/>
       </literal>
       <data>
        <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
       </data>
      </gcEE>
     </fn>
    </p.withPredicate>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="588" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:i[not(@w:val=('0','none'))]&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="font-style"/>
       </att>
       <valueOf flags="Sl">
        <str val="italic"/>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="0" flags="os" as="element()*" line="507" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='style';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="509" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="7|0|XTTE0505|match=&#34;w:style&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <applyT flags="c" bSlot="0">
       <docOrder role="select" intra="0">
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}basedOn)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='basedOn';"/>
         <fn name="key">
          <str val="styles-by-id"/>
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </data>
          <gVarRef name="Q{}styles" bSlot="3"/>
         </fn>
        </slash>
       </docOrder>
      </applyT>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="510" name="xsw:style">
       <sequence>
        <att name="name" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styleId';"/>
          </data>
         </convert>
        </att>
        <applyT line="511" flags="ci" bSlot="0">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="25" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="609" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}color)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='color';"/>
    <choose role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="610">
     <fn name="not">
      <gc op="=" card="1:1" comp="CCC">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
       </data>
       <str val="000000"/>
      </gc>
     </fn>
     <treat line="611" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:color&#34; mode=&#34;build-properties&#34;">
      <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
       <sequence>
        <att name="name" flags="l">
         <str val="color"/>
        </att>
        <valueOf line="612" flags="l">
         <slash>
          <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          <fn name="replace">
           <cvUntyped to="xs:string">
            <data>
             <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)"/>
            </data>
           </cvUntyped>
           <str val="^\d"/>
           <str val="#$0"/>
           <str val=""/>
          </fn>
         </slash>
        </valueOf>
       </sequence>
      </elem>
     </treat>
    </choose>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="4">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="26" rank="1" minImp="0" slots="0" flags="os" as="element()+" line="98" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblPr';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="100" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="7|0|XTTE0505|match=&#34;w:tblPr | w:tcPr&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <applyT flags="c" bSlot="0">
       <docOrder role="select" intra="0">
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblStyle';"/>
         <fn name="key">
          <str val="styles-by-id"/>
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </data>
          <gVarRef name="Q{}styles" bSlot="1"/>
         </fn>
        </slash>
       </docOrder>
      </applyT>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="104" name="xsw:cellStyles">
       <sequence>
        <elem name="xsw:prop" flags="l">
         <sequence>
          <att name="name" flags="l">
           <str val="vertical-align"/>
          </att>
          <valueOf flags="Sl">
           <str val="top"/>
          </valueOf>
         </sequence>
        </elem>
        <applyT line="112" flags="ci" bSlot="0">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="543" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ilvl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ilvl';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="544" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:ilvl&#34; mode=&#34;build-properties&#34;">
     <applyT flags="ct" bSlot="0">
      <axis role="select" name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
     </applyT>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="35" rank="3" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="212" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vAlign)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='vAlign';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="222" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:vAlign&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="vertical-align"/>
       </att>
       <valueOf line="223" flags="l">
        <choose>
         <vc op="eq" onEmpty="0" comp="CCC">
          <fn name="string">
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </fn>
          <str val="center"/>
         </vc>
         <str val="middle"/>
         <true/>
         <fn name="string">
          <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
         </fn>
        </choose>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="21" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="596" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}szCs)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='szCs';"/>
     <gcEE vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="596" op="=" card="N:1" comp="CCC">
      <data>
       <slash>
        <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
        <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sz)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='sz';"/>
       </slash>
      </data>
      <data>
       <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}szCs)"/>
      </data>
     </gcEE>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="22" rank="1" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="599" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}szCs)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='szCs';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="6" rank="1" minImp="0" slots="0" flags="os" as="element()*" line="515" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblSstyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblSstyle';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="517" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="7|0|XTTE0505|match=&#34;w:tblSstyle&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <applyT flags="c" bSlot="0">
       <fn role="select" name="key">
        <str val="styles-by-id"/>
        <data>
         <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
        </data>
        <gVarRef name="Q{}styles" bSlot="5"/>
       </fn>
      </applyT>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="518" name="xsw:style">
       <sequence>
        <att name="name" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styleId';"/>
          </data>
         </convert>
        </att>
        <applyT line="519" flags="ci" bSlot="0">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="28" rank="1" minImp="0" slots="4" flags="os" line="127" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="128">
     <param name="cell" slot="0" flags="tr">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <let line="140" var="bottommost" as="xs:boolean" slot="1" eval="8">
      <fn name="empty">
       <slash>
        <conditionalSort>
         <fn name="exists">
          <tail start="2">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
            <varRef name="cell" slot="0"/>
           </treat>
          </tail>
         </fn>
         <docOrder intra="0">
          <slash>
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
            <varRef name="cell" slot="0"/>
           </treat>
           <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
          </slash>
         </docOrder>
        </conditionalSort>
        <axis name="following-sibling" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tr';"/>
       </slash>
      </fn>
      <let line="141" var="leftmost" as="xs:boolean" slot="2" eval="8">
       <fn name="empty">
        <conditionalSort>
         <fn name="exists">
          <tail start="2">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
            <varRef name="cell" slot="0"/>
           </treat>
          </tail>
         </fn>
         <docOrder intra="0">
          <slash>
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
            <varRef name="cell" slot="0"/>
           </treat>
           <fn name="reverse">
            <axis name="preceding-sibling" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
           </fn>
          </slash>
         </docOrder>
        </conditionalSort>
       </fn>
       <let line="142" var="rightmost" as="xs:boolean" slot="3" eval="8">
        <fn name="empty">
         <conditionalSort>
          <fn name="exists">
           <tail start="2">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
             <varRef name="cell" slot="0"/>
            </treat>
           </tail>
          </fn>
          <docOrder intra="0">
           <slash>
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
             <varRef name="cell" slot="0"/>
            </treat>
            <axis name="following-sibling" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
           </slash>
          </docOrder>
         </conditionalSort>
        </fn>
        <sequence line="144">
         <applyT flags="c" bSlot="0">
          <choose role="select">
           <fn line="139" name="empty">
            <docOrder intra="0">
             <slash>
              <conditionalSort>
               <fn name="exists">
                <tail start="2">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                  <varRef name="cell" slot="0"/>
                 </treat>
                </tail>
               </fn>
               <docOrder intra="0">
                <slash>
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
                  <varRef name="cell" slot="0"/>
                 </treat>
                 <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
                </slash>
               </docOrder>
              </conditionalSort>
              <axis name="preceding-sibling" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tr';"/>
             </slash>
            </docOrder>
           </fn>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}top)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='top';"/>
           <true/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}insideH)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='insideH';"/>
          </choose>
          <withParam name="position" flags="t" as="xs:string">
           <str val="top"/>
          </withParam>
         </applyT>
         <applyT line="147" flags="c" bSlot="0">
          <choose role="select">
           <varRef name="bottommost" slot="1"/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}bottom)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='bottom';"/>
           <true/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}insideH)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='insideH';"/>
          </choose>
          <withParam name="position" flags="t" as="xs:string">
           <str val="bottom"/>
          </withParam>
         </applyT>
         <applyT line="150" flags="c" bSlot="0">
          <choose role="select">
           <varRef name="leftmost" slot="2"/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}left)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='left';"/>
           <true/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}insideV)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='insideV';"/>
          </choose>
          <withParam name="position" flags="t" as="xs:string">
           <str val="left"/>
          </withParam>
         </applyT>
         <applyT line="153" flags="ct" bSlot="0">
          <choose role="select">
           <varRef name="rightmost" slot="3"/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}right)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='right';"/>
           <true/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}insideV)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='insideV';"/>
          </choose>
          <withParam name="position" flags="t" as="xs:string">
           <str val="right"/>
          </withParam>
         </applyT>
        </sequence>
       </let>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="17" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="575" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rFonts)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rFonts';"/>
     <fn vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="575" name="exists">
      <axis name="attribute" nodeTest="(((attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ascii) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}cs)) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hAnsi)) | attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}eastAsia))" jsTest="function a() {function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ascii';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='cs';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='hAnsi';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='eastAsia';};return a()||b();"/>
     </fn>
    </p.withPredicate>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="576" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:rFonts[exists(@w:ascii | @w:cs | @w:hAnsi | @w:eastAsia)]&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="font-family"/>
       </att>
       <valueOf line="577" flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <first>
           <sequence>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ascii)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ascii';"/>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}cs)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='cs';"/>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hAnsi)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='hAnsi';"/>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}eastAsia)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='eastAsia';"/>
           </sequence>
          </first>
         </data>
        </convert>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="30" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)?" line="163" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="30" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)?" line="163" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="14" rank="2" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="555" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}spacing)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='spacing';"/>
    </p.withUpper>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="556" var="property-name" as="document-node()" slot="0" eval="7">
     <doc line="557" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}css-property" bSlot="6">
       <dot role="select" type="attribute()"/>
      </applyT>
     </doc>
     <treat line="559" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:ind/@* | w:spacing/@*&#34; mode=&#34;build-properties&#34;">
      <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
       <sequence>
        <att name="name" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <varRef name="property-name" slot="0"/>
          </data>
         </convert>
        </att>
        <valueOf flags="l">
         <convert from="xs:double" to="xs:string">
          <arith op="div" calc="d/d">
           <cvUntyped to="xs:double">
            <atomSing card="?" diag="1|0||div">
             <dot type="attribute()"/>
            </atomSing>
           </cvUntyped>
           <int val="20"/>
          </arith>
         </convert>
        </valueOf>
        <valueOf flags="Sl">
         <str val="pt"/>
        </valueOf>
       </sequence>
      </elem>
     </treat>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="14" rank="2" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="555" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ind';"/>
    </p.withUpper>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="556" var="property-name" as="document-node()" slot="0" eval="7">
     <doc line="557" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}css-property" bSlot="6">
       <dot role="select" type="attribute()"/>
      </applyT>
     </doc>
     <treat line="559" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:ind/@* | w:spacing/@*&#34; mode=&#34;build-properties&#34;">
      <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
       <sequence>
        <att name="name" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <varRef name="property-name" slot="0"/>
          </data>
         </convert>
        </att>
        <valueOf flags="l">
         <convert from="xs:double" to="xs:string">
          <arith op="div" calc="d/d">
           <cvUntyped to="xs:double">
            <atomSing card="?" diag="1|0||div">
             <dot type="attribute()"/>
            </atomSing>
           </cvUntyped>
           <int val="20"/>
          </arith>
         </convert>
        </valueOf>
        <valueOf flags="Sl">
         <str val="pt"/>
        </valueOf>
       </sequence>
      </elem>
     </treat>
    </let>
   </templateRule>
   <templateRule prec="0" prio="2.0" seq="16" rank="4" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="569" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hanging)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='hanging';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ind)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ind';"/>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="570" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:ind/@w:hanging&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
       <sequence>
        <att name="name" flags="l">
         <str val="text-indent"/>
        </att>
        <valueOf flags="Sl">
         <str val="-"/>
        </valueOf>
        <valueOf flags="l">
         <convert from="xs:double" to="xs:string">
          <arith op="div" calc="d/d">
           <cvUntyped to="xs:double">
            <atomSing card="?" diag="1|0||div">
             <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hanging)"/>
            </atomSing>
           </cvUntyped>
           <int val="20"/>
          </arith>
         </convert>
        </valueOf>
        <valueOf flags="Sl">
         <str val="pt"/>
        </valueOf>
       </sequence>
      </elem>
      <elem xmlns:xsw="http://coko.foundation/xsweet" line="571" name="xsw:prop">
       <sequence>
        <att name="name" flags="l">
         <str val="padding-left"/>
        </att>
        <valueOf flags="l">
         <convert from="xs:double" to="xs:string">
          <arith op="div" calc="d/d">
           <cvUntyped to="xs:double">
            <atomSing card="?" diag="1|0||div">
             <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hanging)"/>
            </atomSing>
           </cvUntyped>
           <int val="20"/>
          </arith>
         </convert>
        </valueOf>
        <valueOf flags="Sl">
         <str val="pt"/>
        </valueOf>
       </sequence>
      </elem>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="33" rank="3" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)?" line="190" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}space)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='space';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="191" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:space | w:tcBorders/*/@w:space&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line="193">
       <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <cast as="xs:string" emptiable="0">
         <data>
          <dot type="attribute()"/>
         </data>
        </cast>
        <str val="0"/>
       </vc>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="194" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="padding-"/>
           <varRef name="position" slot="0"/>
          </fn>
         </att>
         <valueOf line="195" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <dot type="attribute()"/>
           </data>
          </convert>
         </valueOf>
         <valueOf line="195" flags="Sl">
          <str val="pt"/>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="33" rank="3" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)?" line="190" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}space)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='space';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="191" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:space | w:tcBorders/*/@w:space&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line="193">
       <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <cast as="xs:string" emptiable="0">
         <data>
          <dot type="attribute()"/>
         </data>
        </cast>
        <str val="0"/>
       </vc>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="194" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="padding-"/>
           <varRef name="position" slot="0"/>
          </fn>
         </att>
         <valueOf line="195" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <dot type="attribute()"/>
           </data>
          </convert>
         </valueOf>
         <valueOf line="195" flags="Sl">
          <str val="pt"/>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="31" rank="3" minImp="0" slots="3" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)" line="166" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="167" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:val | w:tcBorders/*/@w:val&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <let line="168" var="ms-border-style" as="attribute()" slot="1" eval="7">
       <dot type="attribute()"/>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="169" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="border-"/>
           <varRef name="position" slot="0"/>
           <str val="-style"/>
          </fn>
         </att>
         <valueOf line="170" flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <slash>
              <docOrder intra="0">
               <slash>
                <docOrder intra="0">
                 <let var="vv:loc453288712" as="xs:untypedAtomic" slot="2" eval="8">
                  <data>
                   <varRef name="ms-border-style" slot="1"/>
                  </data>
                  <indexedFilter use="left">
                   <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg535158703" bSlot="7"/>
                   <gc op="=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                    <data>
                     <axis name="attribute" nodeTest="attribute(Q{}ms-style)" jsTest="return item.name=='ms-style'"/>
                    </data>
                    <varRef name="vv:loc453288712" slot="2"/>
                   </gc>
                  </indexedFilter>
                 </let>
                </docOrder>
                <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
               </slash>
              </docOrder>
              <axis name="attribute" nodeTest="attribute(Q{}css-style)" jsTest="return item.name=='css-style'"/>
             </slash>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </let>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="31" rank="3" minImp="0" slots="3" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)" line="166" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="167" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:val | w:tcBorders/*/@w:val&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <let line="168" var="ms-border-style" as="attribute()" slot="1" eval="7">
       <dot type="attribute()"/>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="169" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="border-"/>
           <varRef name="position" slot="0"/>
           <str val="-style"/>
          </fn>
         </att>
         <valueOf line="170" flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <slash>
              <docOrder intra="0">
               <slash>
                <docOrder intra="0">
                 <let var="vv:loc453288712" as="xs:untypedAtomic" slot="2" eval="8">
                  <data>
                   <varRef name="ms-border-style" slot="1"/>
                  </data>
                  <indexedFilter use="left">
                   <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg535158703" bSlot="7"/>
                   <gc op="=" card="1:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
                    <data>
                     <axis name="attribute" nodeTest="attribute(Q{}ms-style)" jsTest="return item.name=='ms-style'"/>
                    </data>
                    <varRef name="vv:loc453288712" slot="2"/>
                   </gc>
                  </indexedFilter>
                 </let>
                </docOrder>
                <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
               </slash>
              </docOrder>
              <axis name="attribute" nodeTest="attribute(Q{}css-style)" jsTest="return item.name=='css-style'"/>
             </slash>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </let>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="12" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="547" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}ilvl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='ilvl';"/>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="548" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:ilvl/@w:val&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="xsweet-list-level"/>
       </att>
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)"/>
         </data>
        </convert>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="2" minImp="0" slots="0" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="533" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}outlineLvl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='outlineLvl';"/>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="534" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:outlineLvl/@w:val&#34; mode=&#34;build-properties&#34;">
     <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:prop">
      <sequence>
       <att name="name" flags="l">
        <str val="xsweet-outline-level"/>
       </att>
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)"/>
         </data>
        </convert>
       </valueOf>
      </sequence>
     </elem>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="32" rank="3" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)?" line="175" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sz)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='sz';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="176" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:sz | w:tcBorders/*/@w:sz&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line="179">
       <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <cast as="xs:string" emptiable="0">
         <data>
          <dot type="attribute()"/>
         </data>
        </cast>
        <str val="0"/>
       </vc>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="182" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="border-"/>
           <varRef name="position" slot="0"/>
           <str val="-width"/>
          </fn>
         </att>
         <valueOf line="183" flags="l">
          <convert from="xs:double" to="xs:string">
           <arith op="div" calc="d/d">
            <fn name="number">
             <atomSing card="?" diag="0|0||number">
              <dot type="attribute()"/>
             </atomSing>
            </fn>
            <choose line="181">
             <gcEE op="=" card="M:N" comp="CCC">
              <data>
               <slash>
                <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
                <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
               </slash>
              </data>
              <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg512777011" bSlot="8"/>
             </gcEE>
             <int val="2"/>
             <true/>
             <int val="8"/>
            </choose>
           </arith>
          </convert>
         </valueOf>
         <valueOf line="183" flags="Sl">
          <str val="pt"/>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="32" rank="3" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)?" line="175" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}sz)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='sz';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="176" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:sz | w:tcBorders/*/@w:sz&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line="179">
       <vc op="ne" onEmpty="1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
        <cast as="xs:string" emptiable="0">
         <data>
          <dot type="attribute()"/>
         </data>
        </cast>
        <str val="0"/>
       </vc>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="182" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="border-"/>
           <varRef name="position" slot="0"/>
           <str val="-width"/>
          </fn>
         </att>
         <valueOf line="183" flags="l">
          <convert from="xs:double" to="xs:string">
           <arith op="div" calc="d/d">
            <fn name="number">
             <atomSing card="?" diag="0|0||number">
              <dot type="attribute()"/>
             </atomSing>
            </fn>
            <choose line="181">
             <gcEE op="=" card="M:N" comp="CCC">
              <data>
               <slash>
                <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
                <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
               </slash>
              </data>
              <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg512777011" bSlot="8"/>
             </gcEE>
             <int val="2"/>
             <true/>
             <int val="8"/>
            </choose>
           </arith>
          </convert>
         </valueOf>
         <valueOf line="183" flags="Sl">
          <str val="pt"/>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="34" rank="3" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="202" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}color)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='color';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="203" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:color | w:tcBorders/*/@w:color&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line="204">
       <fn name="not">
        <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <literal count="2">
          <str val="000000"/>
          <str val="auto"/>
         </literal>
         <data>
          <dot type="attribute()"/>
         </data>
        </gcEE>
       </fn>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="205" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="border-"/>
           <varRef name="position" slot="0"/>
           <str val="-color"/>
          </fn>
         </att>
         <valueOf line="206" flags="l">
          <fn name="replace">
           <cvUntyped to="xs:string">
            <data>
             <dot type="attribute()"/>
            </data>
           </cvUntyped>
           <str val="^\d"/>
           <str val="#$0"/>
           <str val=""/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="34" rank="3" minImp="0" slots="1" flags="os" as="element(Q{http://coko.foundation/xsweet}prop)*" line="202" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}color)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='color';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
      <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblBorders)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblBorders';"/>
     </p.withUpper>
    </p.withUpper>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="203" as="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';" diag="7|0|XTTE0505|match=&#34;w:tblBorders/*/@w:color | w:tcBorders/*/@w:color&#34; mode=&#34;build-properties&#34;">
     <sequence>
      <param name="position" slot="0" flags="tr" as="xs:string">
       <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|position">
        <check card="1" diag="8|0|XTTE0590|position">
         <cvUntyped to="xs:string">
          <data>
           <supplied slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </param>
      <choose line="204">
       <fn name="not">
        <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <literal count="2">
          <str val="000000"/>
          <str val="auto"/>
         </literal>
         <data>
          <dot type="attribute()"/>
         </data>
        </gcEE>
       </fn>
       <elem xmlns:xsw="http://coko.foundation/xsweet" line="205" name="xsw:prop">
        <sequence>
         <att name="name" flags="l">
          <fn name="concat">
           <str val="border-"/>
           <varRef name="position" slot="0"/>
           <str val="-color"/>
          </fn>
         </att>
         <valueOf line="206" flags="l">
          <fn name="replace">
           <cvUntyped to="xs:string">
            <data>
             <dot type="attribute()"/>
            </data>
           </cvUntyped>
           <str val="^\d"/>
           <str val="#$0"/>
           <str val=""/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </treat>
   </templateRule>
  </mode>
 </co>
 <co id="15" binds="11">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg535158703" type="element(Q{http://coko.foundation/xsweet}border)*" line="170" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" visibility="PRIVATE" flags="x" jsAcceptor="function test(item) {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='border';};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c() {return true;};">
   <slash vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="170">
    <gVarRef name="Q{}border-map" bSlot="0"/>
    <axis name="child" nodeTest="element(Q{http://coko.foundation/xsweet}border)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='border';"/>
   </slash>
  </globalVariable>
 </co>
 <co id="17" binds="">
  <function name="Q{http://github.com/wendellpiez/XMLjellysandwich}classes" line="63" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" eval="3" flags="pU" as="item()*" slots="1">
   <arg name="who" as="element()"/>
   <forEach role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="65">
    <fn name="tokenize">
     <cvUntyped to="xs:string">
      <data>
       <slash simple="1">
        <varRef name="who" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
       </slash>
      </data>
     </cvUntyped>
     <str val="\s+"/>
     <str val=""/>
    </fn>
    <fn name="lower-case">
     <dot type="xs:string"/>
    </fn>
   </forEach>
  </function>
 </co>
 <co id="18" binds="">
  <template name="Q{}xmljellysandwich_pack" flags="os" line="13" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" slots="0">
   <empty role="body"/>
  </template>
 </co>
 <co id="19" binds="3">
  <mode name="Q{}render" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="1" minImp="0" slots="0" flags="os" line="74" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="75">
     <elem name="span" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
      <sequence>
       <att name="style" flags="l">
        <str val="color: green; font-size: 70%; font-family: sans-serif"/>
       </att>
       <valueOf line="76" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
     <applyT line="78" flags="ci" bSlot="0">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
     <elem line="79" name="span" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
      <sequence>
       <att name="style" flags="l">
        <str val="color: green; font-size: 70%; font-family: sans-serif"/>
       </att>
       <valueOf line="80" flags="l">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="2" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="0">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="-1.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="84" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.any role="match"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="85" name="span" namespaces="map=http://www.w3.org/2005/xpath-functions/map xs=http://www.w3.org/2001/XMLSchema XJS=http://github.com/wendellpiez/XMLjellysandwich">
     <sequence>
      <att name="style" flags="l">
       <str val="color: blue"/>
      </att>
      <valueOf line="86" flags="l">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <dot/>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id="2" binds="">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1995143020" type="item()" line="41" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" visibility="PRIVATE" jsAcceptor="return val;" jsCardCheck="function c(n) {return n==1;};">
   <check vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map" line="41" card="1" diag="0|0||ixsl:call">
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:window" type="item()?"/>
   </check>
  </globalVariable>
 </co>
 <co id="16" binds="11">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg512777011" type="xs:untypedAtomic*" line="181" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.untypedAtomic.cast(val);" jsCardCheck="function c() {return true;};">
   <data vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="181">
    <slash>
     <slash>
      <indexedFilter use="left">
       <gVarRef name="Q{}border-map" bSlot="0"/>
       <gc op="=" card="M:N" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}css-style)" jsTest="return item.name=='css-style'"/>
        </data>
        <str val="double"/>
       </gc>
      </indexedFilter>
      <axis name="child" nodeTest="element(Q{http://coko.foundation/xsweet}border)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='border';"/>
     </slash>
     <axis name="attribute" nodeTest="attribute(Q{}ms-style)" jsTest="return item.name=='ms-style'"/>
    </slash>
   </data>
  </globalVariable>
 </co>
 <co id="20" binds="">
  <globalVariable name="Q{}debug" type="xs:boolean" line="147" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <false/>
  </globalVariable>
 </co>
 <co id="21" binds="13 13 13 3">
  <mode name="Q{}render-css" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="617" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <comment role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="620">
     <fn name="string-join">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <mergeAdj>
         <sequence>
          <valueOf>
           <str val=" matching "/>
          </valueOf>
          <valueOf>
           <fn name="name">
            <dot type="element()"/>
           </fn>
          </valueOf>
         </sequence>
        </mergeAdj>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </comment>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="2" flags="os" as="xs:string?" line="624" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="626" var="styles-tree" as="document-node()" slot="0" eval="7">
     <doc line="627" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}build-properties" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <cvUntyped line="644" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <slash>
         <slash line="636" simple="1">
          <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
           <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
            <forEach>
             <slash simple="1">
              <varRef name="styles-tree" slot="0"/>
              <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
             </slash>
             <compAtt line="637" flags="l">
              <fn role="name" name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </data>
               </convert>
              </fn>
              <convert role="select" from="xs:untypedAtomic" to="xs:string">
               <data>
                <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
               </data>
              </convert>
             </compAtt>
            </forEach>
           </elem>
          </treat>
          <axis line="644" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
         <fn name="concat">
          <fn name="name">
           <dot type="attribute()"/>
          </fn>
          <str val=": "/>
          <data>
           <dot type="attribute()"/>
          </data>
         </fn>
        </slash>
        <str val="; "/>
       </fn>
      </cast>
     </cvUntyped>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="2" flags="os" as="xs:string?" line="68" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
    <cvUntyped role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="69" to="xs:string">
     <sequence>
      <param name="cell" slot="0" flags="tr" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)">
       <treat role="conversion" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';" diag="8|0|XTTE0590|cell">
        <check card="1" diag="8|0|XTTE0590|cell">
         <supplied slot="0"/>
        </check>
       </treat>
      </param>
      <let line="72" var="styles-tree" as="document-node()" slot="1" eval="7">
       <doc line="74" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" validation="preserve">
        <sequence>
         <applyT mode="Q{}build-properties" bSlot="1">
          <docOrder role="select" intra="1">
           <slash>
            <slash>
             <axis name="self" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
             <fn name="reverse">
              <axis name="ancestor" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tbl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tbl';"/>
             </fn>
            </slash>
            <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblPr';"/>
           </slash>
          </docOrder>
         </applyT>
         <applyT line="75" mode="Q{}build-properties" bSlot="2">
          <dot role="select" type="element()"/>
         </applyT>
        </sequence>
       </doc>
       <cast line="92" as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <slash>
          <slash line="84" simple="1">
           <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
            <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
             <forEach>
              <slash simple="1">
               <varRef name="styles-tree" slot="1"/>
               <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
              </slash>
              <compAtt line="85" flags="l">
               <fn role="name" name="string">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                 </data>
                </convert>
               </fn>
               <convert role="select" from="xs:untypedAtomic" to="xs:string">
                <data>
                 <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
                </data>
               </convert>
              </compAtt>
             </forEach>
            </elem>
           </treat>
           <axis line="92" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <fn name="concat">
           <fn name="name">
            <dot type="attribute()"/>
           </fn>
           <str val=": "/>
           <data>
            <dot type="attribute()"/>
           </data>
          </fn>
         </slash>
         <str val="; "/>
        </fn>
       </cast>
      </let>
     </sequence>
    </cvUntyped>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="2" flags="os" as="xs:string?" line="624" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="626" var="styles-tree" as="document-node()" slot="0" eval="7">
     <doc line="627" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}build-properties" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <cvUntyped line="644" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <slash>
         <slash line="636" simple="1">
          <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
           <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
            <forEach>
             <slash simple="1">
              <varRef name="styles-tree" slot="0"/>
              <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
             </slash>
             <compAtt line="637" flags="l">
              <fn role="name" name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </data>
               </convert>
              </fn>
              <convert role="select" from="xs:untypedAtomic" to="xs:string">
               <data>
                <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
               </data>
              </convert>
             </compAtt>
            </forEach>
           </elem>
          </treat>
          <axis line="644" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
         <fn name="concat">
          <fn name="name">
           <dot type="attribute()"/>
          </fn>
          <str val=": "/>
          <data>
           <dot type="attribute()"/>
          </data>
         </fn>
        </slash>
        <str val="; "/>
       </fn>
      </cast>
     </cvUntyped>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="2" flags="os" as="xs:string?" line="624" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='style';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="626" var="styles-tree" as="document-node()" slot="0" eval="7">
     <doc line="627" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}build-properties" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <cvUntyped line="644" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="string-join">
        <slash>
         <slash line="636" simple="1">
          <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
           <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
            <forEach>
             <slash simple="1">
              <varRef name="styles-tree" slot="0"/>
              <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
             </slash>
             <compAtt line="637" flags="l">
              <fn role="name" name="string">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                </data>
               </convert>
              </fn>
              <convert role="select" from="xs:untypedAtomic" to="xs:string">
               <data>
                <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
               </data>
              </convert>
             </compAtt>
            </forEach>
           </elem>
          </treat>
          <axis line="644" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
         </slash>
         <fn name="concat">
          <fn name="name">
           <dot type="attribute()"/>
          </fn>
          <str val=": "/>
          <data>
           <dot type="attribute()"/>
          </data>
         </fn>
        </slash>
        <str val="; "/>
       </fn>
      </cast>
     </cvUntyped>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="3">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="3" rank="1" minImp="0" slots="2" flags="os" as="xs:string?" line="68" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblPr';"/>
    <cvUntyped role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="69" to="xs:string">
     <sequence>
      <param name="cell" slot="0" flags="tr" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)">
       <treat role="conversion" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';" diag="8|0|XTTE0590|cell">
        <check card="1" diag="8|0|XTTE0590|cell">
         <supplied slot="0"/>
        </check>
       </treat>
      </param>
      <let line="72" var="styles-tree" as="document-node()" slot="1" eval="7">
       <doc line="74" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" validation="preserve">
        <sequence>
         <applyT mode="Q{}build-properties" bSlot="1">
          <docOrder role="select" intra="1">
           <slash>
            <slash>
             <axis name="self" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
             <fn name="reverse">
              <axis name="ancestor" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tbl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tbl';"/>
             </fn>
            </slash>
            <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblPr';"/>
           </slash>
          </docOrder>
         </applyT>
         <applyT line="75" mode="Q{}build-properties" bSlot="2">
          <dot role="select" type="element()"/>
         </applyT>
        </sequence>
       </doc>
       <cast line="92" as="xs:untypedAtomic" emptiable="0">
        <fn name="string-join">
         <slash>
          <slash line="84" simple="1">
           <treat as="element(Q{http://coko.foundation/xsweet}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='style';" diag="3|0|XTTE0570|styleProxy">
            <elem xmlns:xsw="http://coko.foundation/xsweet" name="xsw:style">
             <forEach>
              <slash simple="1">
               <varRef name="styles-tree" slot="1"/>
               <axis name="descendant" nodeTest="element(Q{http://coko.foundation/xsweet}prop)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://coko.foundation/xsweet'&amp;&amp;q.local=='prop';"/>
              </slash>
              <compAtt line="85" flags="l">
               <fn role="name" name="string">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <data>
                  <axis name="attribute" nodeTest="attribute(Q{}name)" jsTest="return item.name=='name'"/>
                 </data>
                </convert>
               </fn>
               <convert role="select" from="xs:untypedAtomic" to="xs:string">
                <data>
                 <dot type="element(Q{http://coko.foundation/xsweet}prop)"/>
                </data>
               </convert>
              </compAtt>
             </forEach>
            </elem>
           </treat>
           <axis line="92" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
          </slash>
          <fn name="concat">
           <fn name="name">
            <dot type="attribute()"/>
           </fn>
           <str val=": "/>
           <data>
            <dot type="attribute()"/>
           </data>
          </fn>
         </slash>
         <str val="; "/>
        </fn>
       </cast>
      </let>
     </sequence>
    </cvUntyped>
   </templateRule>
  </mode>
 </co>
 <co id="22" binds="">
  <function name="Q{http://coko.foundation/xsweet}column-position" line="60" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" eval="8" flags="pU" as="xs:integer" slots="1">
   <arg name="cell" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
   <fn role="body" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="62" name="sum">
    <slash>
     <slash>
      <varRef name="cell" slot="0"/>
      <union op="|">
       <docOrder intra="1">
        <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
       </docOrder>
       <fn name="reverse">
        <axis name="preceding-sibling" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
       </fn>
      </union>
     </slash>
     <first>
      <sequence>
       <slash>
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='gridSpan';"/>
        </slash>
        <cast as="xs:integer" emptiable="1">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
         </data>
        </cast>
       </slash>
       <int val="1"/>
      </sequence>
     </first>
    </slash>
   </fn>
  </function>
 </co>
 <co id="23" binds="3 22 23">
  <mode name="Q{}iterate-rowspan-count" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="0">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="3" flags="os" as="xs:integer" line="42" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
    <treat role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="43" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="7|0|XTTE0505|match=&#34;w:tc&#34; mode=&#34;iterate-rowspan-count&#34;">
     <check card="1" diag="7|0|XTTE0505|match=&#34;w:tc&#34; mode=&#34;iterate-rowspan-count&#34;">
      <cvUntyped to="xs:integer">
       <sequence>
        <param name="so-far" slot="0">
         <int role="select" val="0"/>
         <supplied role="conversion" slot="0"/>
        </param>
        <let line="44" var="pos" as="xs:integer" slot="1" eval="7">
         <ufCall name="Q{http://coko.foundation/xsweet}column-position" tailCall="false" bSlot="1" eval="7">
          <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
         </ufCall>
         <let line="47" var="merged-row-cell" as="node()*" slot="2" eval="3">
          <docOrder intra="1">
           <filter flags="b">
            <slash>
             <docOrder intra="1">
              <slash>
               <axis name="parent" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tr';"/>
               <first>
                <axis name="following-sibling" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tr';"/>
               </first>
              </slash>
             </docOrder>
             <fn name="key">
              <str val="cell-by-position"/>
              <varRef name="pos" slot="1"/>
              <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)"/>
             </fn>
            </slash>
            <fn name="exists">
             <filter flags="b">
              <slash>
               <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
               <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vMerge)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='vMerge';"/>
              </slash>
              <fn name="not">
               <gc op="=" card="1:1" comp="CCC">
                <data>
                 <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
                </data>
                <str val="restart"/>
               </gc>
              </fn>
             </filter>
            </fn>
           </filter>
          </docOrder>
          <sequence line="48">
           <data>
            <applyT mode="Q{}iterate-rowspan-count" bSlot="2">
             <varRef role="select" name="merged-row-cell" slot="2"/>
             <withParam name="so-far" as="xs:numeric?">
              <arith line="49" op="+" calc="a+a">
               <cvUntyped to="xs:double">
                <atomSing card="?" diag="1|0||+">
                 <varRef name="so-far" slot="0"/>
                </atomSing>
               </cvUntyped>
               <int val="1"/>
              </arith>
             </withParam>
            </applyT>
           </data>
           <choose line="52">
            <fn name="empty">
             <varRef name="merged-row-cell" slot="2"/>
            </fn>
            <arith line="53" op="+" calc="a+a">
             <cvUntyped to="xs:double">
              <atomSing card="?" diag="1|0||+">
               <varRef name="so-far" slot="0"/>
              </atomSing>
             </cvUntyped>
             <int val="1"/>
            </arith>
           </choose>
          </sequence>
         </let>
        </let>
       </sequence>
      </cvUntyped>
     </check>
    </treat>
   </templateRule>
  </mode>
 </co>
 <co id="3" binds="0 9 3 3 3 3 3 3 3 0 21 3 3 6 3 21 4 4 3 3 3 3 3 21 23 3">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="28" rank="2" minImp="0" slots="0" flags="os" line="667" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styles';"/>
    </p.withUpper>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="669">
     <valueOf>
      <str val="&#xA;."/>
     </valueOf>
     <valueOf>
      <ufCall name="Q{http://coko.foundation/xsweet}safeClass" tailCall="false" bSlot="0" eval="7">
       <check card="1" diag="0|0||xsw:safeClass">
        <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styleId';"/>
       </check>
      </ufCall>
     </valueOf>
     <valueOf>
      <str val=" { "/>
     </valueOf>
     <applyT line="672" mode="Q{}writeCSS" bSlot="1">
      <dot role="select" type="element()"/>
     </applyT>
     <valueOf>
      <str val=" }"/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="3" rank="0" minImp="0" slots="0" flags="os" line="92" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="Q{http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1&amp;&amp;q.uri == 'http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing'"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships wp=http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="94" flags="t" bSlot="2">
     <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="-0.25" seq="1" rank="0" minImp="0" slots="0" flags="os" line="97" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1&amp;&amp;q.uri == 'http://schemas.openxmlformats.org/wordprocessingml/2006/main'"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="98" flags="cti" bSlot="0">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="21" rank="1" minImp="0" slots="0" flags="os" line="315" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}instrText)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='instrText';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="1" minImp="0" slots="0" flags="os" line="210" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}fldChar)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='fldChar';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="16" rank="1" minImp="0" slots="0" flags="os" line="221" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tbl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tbl';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="223" name="table" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <applyT bSlot="3">
      <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tr';"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="18" rank="1" minImp="0" slots="0" flags="os" line="240" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="0" flags="os" line="123" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}endnoteRef)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='endnoteRef';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="124" name="span" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <fn name="local-name">
        <dot type="element()"/>
       </fn>
      </att>
      <comment flags="l">
       <str val=" value to be generated "/>
      </comment>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="15" rank="1" minImp="0" slots="0" flags="os" line="217" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}cr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='cr';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="218" name="br" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <att name="class" flags="l">
      <str val="cr"/>
     </att>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="9" rank="1" minImp="0" slots="0" flags="os" line="152" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}bookmarkStart)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='bookmarkStart';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="154" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <applyT bSlot="4">
       <axis role="select" name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
      </applyT>
      <att line="157" name="id" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <sequence>
            <valueOf flags="S">
             <str val="docx-bookmark_"/>
            </valueOf>
            <valueOf>
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='id';"/>
              </data>
             </convert>
            </valueOf>
           </sequence>
          </mergeAdj>
         </data>
        </convert>
        <str val=""/>
       </fn>
      </att>
      <comment line="159" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <sequence>
            <valueOf>
             <str val=" bookmark "/>
            </valueOf>
            <forEach>
             <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
             <sequence>
              <valueOf flags="S">
               <str val="='"/>
              </valueOf>
              <valueOf>
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)"/>
                </data>
               </convert>
              </valueOf>
              <valueOf flags="S">
               <str val="'"/>
              </valueOf>
             </sequence>
            </forEach>
           </sequence>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </comment>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="24" rank="2" minImp="0" slots="0" flags="os" line="352" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="25" rank="1" minImp="0" slots="0" flags="os" line="354" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="27" rank="1" minImp="0" slots="0" flags="os" line="661" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styles)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styles';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="662" name="style" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="type" flags="l">
       <str val="text/css"/>
      </att>
      <applyT line="663" flags="i" bSlot="5">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="6" rank="1" minImp="0" slots="0" flags="os" line="117" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}endnote)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='endnote';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="118" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="docx-endnote"/>
      </att>
      <att name="id" flags="l">
       <fn name="concat">
        <str val="en"/>
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='id';"/>
          </data>
         </convert>
        </fn>
       </fn>
      </att>
      <applyT line="119" bSlot="6">
       <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='p';"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="4" rank="1" minImp="0" slots="0" flags="os" line="97" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="98" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="docx-body"/>
      </att>
      <applyT line="99" bSlot="7">
       <axis role="select" name="child" nodeTest="(element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p) | element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tbl))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='p';};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tbl';};return a()||b();"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="26" rank="1" minImp="0" slots="0" flags="os" line="423" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tab)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tab';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="-1" name="tab" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <empty/>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="1" minImp="0" slots="0" flags="os" line="129" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}footnote)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='footnote';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="130" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="docx-footnote"/>
      </att>
      <att name="id" flags="l">
       <fn name="concat">
        <str val="fn"/>
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='id';"/>
          </data>
         </convert>
        </fn>
       </fn>
      </att>
      <applyT line="131" bSlot="8">
       <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='p';"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="12" rank="1" minImp="0" slots="1" flags="os" line="179" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}p)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='p';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="182" name="p" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <forEach>
       <slash>
        <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
        <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pStyle)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pStyle';"/>
       </slash>
       <att line="185" name="class" flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <cast as="xs:untypedAtomic" emptiable="0">
          <ufCall name="Q{http://coko.foundation/xsweet}safeClass" tailCall="false" bSlot="9" eval="7">
           <check card="1" diag="0|0||xsw:safeClass">
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </check>
          </ufCall>
         </cast>
        </convert>
       </att>
      </forEach>
      <let line="191" var="style" as="document-node()" slot="0" eval="7">
       <doc line="192" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
        <applyT mode="Q{}render-css" bSlot="10">
         <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}pPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='pPr';"/>
        </applyT>
       </doc>
       <sequence line="196">
        <choose>
         <fn name="matches">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="style" slot="0"/>
           </data>
          </cvUntyped>
          <str val="\S"/>
          <str val=""/>
         </fn>
         <att line="197" name="style" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <varRef name="style" slot="0"/>
           </data>
          </convert>
         </att>
        </choose>
        <applyT line="204" bSlot="11">
         <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
        </applyT>
       </sequence>
      </let>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="1" minImp="0" slots="0" flags="os" line="169" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}bookmarkEnd)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='bookmarkEnd';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="173" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="href" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <sequence>
            <valueOf flags="S">
             <str val="#docx-bookmark_"/>
            </valueOf>
            <valueOf>
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='id';"/>
              </data>
             </convert>
            </valueOf>
           </sequence>
          </mergeAdj>
         </data>
        </convert>
        <str val=""/>
       </fn>
      </att>
      <comment line="175" flags="l">
       <fn name="string-join">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <mergeAdj>
           <sequence>
            <valueOf>
             <str val=" bookmark end "/>
            </valueOf>
            <forEach>
             <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
             <sequence>
              <valueOf flags="S">
               <str val="='"/>
              </valueOf>
              <valueOf>
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <dot type="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)"/>
                </data>
               </convert>
              </valueOf>
              <valueOf flags="S">
               <str val="'"/>
              </valueOf>
             </sequence>
            </forEach>
           </sequence>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </comment>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="3.0" seq="22" rank="3" minImp="0" slots="0" flags="os" line="317" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}endnoteReference)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='endnoteReference';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="319" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="endnoteReference"/>
      </att>
      <att name="href" flags="l">
       <fn name="concat">
        <str val="#en"/>
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='id';"/>
          </data>
         </convert>
        </fn>
       </fn>
      </att>
      <applyT line="320" flags="i" bSlot="12">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
      <choose line="321">
       <fn name="empty">
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
       </fn>
       <comment flags="l">
        <str val=" (generated) "/>
       </comment>
      </choose>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="14" rank="1" minImp="0" slots="0" flags="os" line="212" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}br)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='br';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="213" name="br" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <att name="class" flags="l">
      <str val="br"/>
     </att>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="19" rank="1" minImp="0" slots="1" flags="os" line="253" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hyperlink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='hyperlink';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="256" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <forEach>
       <fn name="key">
        <str val="rels-by-id"/>
        <data>
         <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/officeDocument/2006/relationships}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/officeDocument/2006/relationships'&amp;&amp;q.local=='id';"/>
        </data>
        <gVarRef name="Q{}relations-doc" bSlot="13"/>
       </fn>
       <att line="257" name="href" flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}Target)" jsTest="return item.name=='Target'"/>
         </data>
        </convert>
       </att>
      </forEach>
      <forEach line="261">
       <let var="vv:current-48985482" as="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hyperlink)" slot="0" eval="7">
        <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hyperlink)"/>
        <fn name="key">
         <str val="Q{http://saxon.sf.net/}kk105"/>
         <data>
          <slash simple="1">
           <varRef name="vv:current-48985482" slot="0"/>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}anchor)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='anchor';"/>
          </slash>
         </data>
         <root/>
        </fn>
       </let>
       <att line="263" name="href" flags="l">
        <fn name="concat">
         <str val="#"/>
         <data>
          <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
         </data>
        </fn>
       </att>
      </forEach>
      <applyT line="265" flags="i" bSlot="14">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="20" rank="1" minImp="0" slots="1" flags="os" line="269" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}r)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='r';"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="270" var="literal-css" as="document-node()" slot="0" eval="7">
     <doc line="271" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" validation="preserve">
      <applyT mode="Q{}render-css" bSlot="15">
       <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}rPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='rPr';"/>
      </applyT>
     </doc>
     <choose line="274">
      <fn name="matches">
       <cvUntyped to="xs:string">
        <data>
         <varRef name="literal-css" slot="0"/>
        </data>
       </cvUntyped>
       <str val="\S"/>
       <str val=""/>
      </fn>
      <elem line="275" name="span" nsuri="http://www.w3.org/1999/xhtml" flags="d">
       <sequence>
        <att name="style" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <varRef name="literal-css" slot="0"/>
          </data>
         </convert>
        </att>
        <callT line="276" name="format-components" bSlot="16"/>
       </sequence>
      </elem>
      <true/>
      <callT line="280" name="format-components" bSlot="17"/>
     </choose>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="0" flags="os" line="111" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}drawing)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='drawing';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="112" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="drawing"/>
      </att>
      <applyT line="113" flags="i" bSlot="18">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="2" minImp="0" slots="0" flags="os" line="87" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11);"/>
    </p.withUpper>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="88" flags="t" bSlot="19">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="os" line="91" module="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}document)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='document';"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/X-Tractor/plain.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema map=http://www.w3.org/2005/xpath-functions/map w=http://schemas.openxmlformats.org/wordprocessingml/2006/main" line="92" flags="t" bSlot="20">
     <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}body)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='body';"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="3.0" seq="23" rank="3" minImp="0" slots="0" flags="os" line="327" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}footnoteReference)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='footnoteReference';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="329" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <str val="footnoteReference"/>
      </att>
      <att name="href" flags="l">
       <fn name="concat">
        <str val="#fn"/>
        <fn name="string">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='id';"/>
          </data>
         </convert>
        </fn>
       </fn>
      </att>
      <applyT line="330" flags="i" bSlot="21">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
      <choose line="331">
       <fn name="empty">
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
       </fn>
       <comment flags="l">
        <str val=" (generated) "/>
       </comment>
      </choose>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="1" minImp="0" slots="0" flags="os" line="123" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}footnoteRef)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='footnoteRef';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="124" name="span" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <sequence>
      <att name="class" flags="l">
       <fn name="local-name">
        <dot type="element()"/>
       </fn>
      </att>
      <comment flags="l">
       <str val=" value to be generated "/>
      </comment>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="17" rank="1" minImp="0" slots="0" flags="os" line="227" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tr';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="229" name="tr" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <applyT bSlot="22">
      <axis role="select" name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="30" rank="2" minImp="0" slots="0" flags="os" line="66" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
     <filter vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="66" flags="b">
      <slash>
       <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
       <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vMerge)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='vMerge';"/>
      </slash>
      <fn name="not">
       <gc op="=" card="1:1" comp="CCC">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
        </data>
        <str val="restart"/>
       </gc>
      </fn>
     </filter>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="29" rank="1" minImp="0" slots="2" flags="os" line="13" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl">
    <p.nodeTest role="match" test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="16" name="td" nsuri="http://www.w3.org/1999/xhtml" flags="d">
     <let var="style" as="document-node()" slot="0" eval="7">
      <doc line="18" base="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" validation="preserve">
       <applyT mode="Q{}render-css" bSlot="23">
        <first role="select">
         <sequence>
          <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
          <docOrder intra="1">
           <slash>
            <fn name="reverse">
             <slash simple="1">
              <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
              <axis name="ancestor" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tbl)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tbl';"/>
             </slash>
            </fn>
            <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tblPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tblPr';"/>
           </slash>
          </docOrder>
         </sequence>
        </first>
        <withParam name="cell" flags="t" as="item()">
         <dot line="19" type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
        </withParam>
       </applyT>
      </doc>
      <sequence line="24">
       <choose>
        <fn name="matches">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="style" slot="0"/>
          </data>
         </cvUntyped>
         <str val="\S"/>
         <str val=""/>
        </fn>
        <att line="25" name="style" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <varRef name="style" slot="0"/>
          </data>
         </convert>
        </att>
       </choose>
       <forEach line="28">
        <slash>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
         <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}gridSpan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='gridSpan';"/>
        </slash>
        <att line="29" name="colspan" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
          </data>
         </convert>
        </att>
       </forEach>
       <choose line="32">
        <fn name="exists">
         <filter flags="b">
          <slash>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tcPr)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tcPr';"/>
           <axis name="child" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}vMerge)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='vMerge';"/>
          </slash>
          <gc op="=" card="1:1" comp="CCC">
           <data>
            <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}val)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='val';"/>
           </data>
           <str val="restart"/>
          </gc>
         </filter>
        </fn>
        <let line="33" var="row-count" as="xs:integer" slot="1" eval="7">
         <treat line="34" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="3|0|XTTE0570|row-count">
          <check card="1" diag="3|0|XTTE0570|row-count">
           <cvUntyped to="xs:integer">
            <data>
             <applyT mode="Q{}iterate-rowspan-count" bSlot="24">
              <dot role="select" type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
             </applyT>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <att line="36" name="rowspan" flags="l">
          <convert from="xs:integer" to="xs:string">
           <varRef name="row-count" slot="1"/>
          </convert>
         </att>
        </let>
       </choose>
       <applyT line="38" bSlot="25">
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
       </applyT>
      </sequence>
     </let>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="2" minImp="0" slots="0" flags="os" line="163" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}bookmarkEnd)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='bookmarkEnd';"/>
    </p.withUpper>
    <att role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="165" name="class">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="local-name">
        <check card="?" diag="0|0||local-name">
         <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
        </check>
       </fn>
      </cast>
     </convert>
    </att>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="2" minImp="0" slots="0" flags="os" line="163" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isAttr(item) &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
     <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}bookmarkStart)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='bookmarkStart';"/>
    </p.withUpper>
    <att role="action" vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="165" name="class">
     <convert from="xs:untypedAtomic" to="xs:string">
      <cast as="xs:untypedAtomic" emptiable="0">
       <fn name="local-name">
        <check card="?" diag="0|0||local-name">
         <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
        </check>
       </fn>
      </cast>
     </convert>
    </att>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{}cell-by-position" line="58" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" binds="22">
  <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='tc';"/>
  <ufCall vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-table-extract.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="58" name="Q{http://coko.foundation/xsweet}column-position" tailCall="false" bSlot="0">
   <dot type="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}tc)"/>
  </ufCall>
 </key>
 <key name="Q{http://saxon.sf.net/}kk105" line="0" binds="">
  <p.nodeSet>
   <axis vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="261" name="descendant" nodeTest="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}bookmarkStart)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='bookmarkStart';"/>
  </p.nodeSet>
  <data vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="261">
   <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}name)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='name';"/>
  </data>
 </key>
 <key name="Q{}rels-by-id" line="61" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" binds="">
  <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/package/2006/relationships}Relationship)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/package/2006/relationships'&amp;&amp;q.local=='Relationship';"/>
  <data vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="61">
   <axis name="attribute" nodeTest="attribute(Q{}Id)" jsTest="return item.name=='Id'"/>
  </data>
 </key>
 <key name="Q{}internal-refs" line="150" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" binds="">
  <p.withPredicate>
   <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}hyperlink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='hyperlink';"/>
   <fn vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="150" name="exists">
    <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}anchor)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='anchor';"/>
   </fn>
  </p.withPredicate>
  <data vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="150">
   <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}anchor)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='anchor';"/>
  </data>
 </key>
 <key name="Q{}styles-by-id" line="59" module="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" binds="">
  <p.nodeTest test="element(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='style';"/>
  <data vn="31" baseUri="file:/home/wendell/Documents/XSweet/applications/docx-extract/docx-html-extract-mini.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform =http://www.w3.org/1999/xhtml r=http://schemas.openxmlformats.org/officeDocument/2006/relationships w=http://schemas.openxmlformats.org/wordprocessingml/2006/main rel=http://schemas.openxmlformats.org/package/2006/relationships xs=http://www.w3.org/2001/XMLSchema xsw=http://coko.foundation/xsweet" line="59">
   <axis name="attribute" nodeTest="attribute(Q{http://schemas.openxmlformats.org/wordprocessingml/2006/main}styleId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri=='http://schemas.openxmlformats.org/wordprocessingml/2006/main'&amp;&amp;q.local=='styleId';"/>
  </data>
 </key>
 <output>
  <property name="indent" value="no"/>
  <property name="omit-xml-declaration" value="yes"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="xml"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ 254fb43a?>
