<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.7.0.15" timeStamp="2017-11-29T17:42:21.44-05:00" target="JS">
 <co id="0" binds="1">
  <template name="Q{}show" flags="os" line="205" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" slots="0">
   <sequence role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="208">
    <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:set-attribute" type="item()*">
     <str val="class"/>
     <fn name="string-join">
      <filter flags="b">
       <forEach line="315">
        <fn name="tokenize">
         <cvUntyped to="xs:string">
          <data>
           <slash line="206" simple="1">
            <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;" diag="0|0||XJS:classes">
             <dot flags="a"/>
            </treat>
            <axis line="315" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
           </slash>
          </data>
         </cvUntyped>
         <str val="\s+"/>
         <str val=""/>
        </fn>
        <fn name="lower-case">
         <dot type="xs:string"/>
        </fn>
       </forEach>
       <fn name="not">
        <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <data>
          <dot/>
         </data>
         <str val="hidden"/>
        </gc>
       </fn>
      </filter>
      <str val=" "/>
     </fn>
    </ifCall>
    <applyT line="209" mode="Q{}spill" flags="t" bSlot="0">
     <first role="select">
      <slash>
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <union op="|">
        <axis name="child" nodeTest="node()" jsTest="return SaxonJS.U.isNode(item);"/>
        <axis name="following" nodeTest="node()" jsTest="return SaxonJS.U.isNode(item);"/>
       </union>
      </slash>
     </first>
    </applyT>
   </sequence>
  </template>
 </co>
 <co id="2" binds="2 3">
  <mode name="Q{}toc" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="35" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}catalog)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='catalog';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="36" name="div">
     <sequence>
      <att name="class" flags="l">
       <str val="toc"/>
      </att>
      <applyT line="37" flags="ci" bSlot="0">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="0" minImp="0" slots="0" flags="os" line="41" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}card)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='card';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="42" name="h5">
     <sequence>
      <att name="class" flags="l">
       <str val="toc-entry"/>
      </att>
      <att name="data-src" flags="l">
       <convert from="xs:untypedAtomic" to="xs:string">
        <data>
         <axis name="attribute" nodeTest="attribute(Q{}src)" jsTest="return item.name=='src'"/>
        </data>
       </convert>
      </att>
      <applyT line="43" mode="Q{}toc" bSlot="0">
       <sequence role="select">
        <axis name="child" nodeTest="element(Q{}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='title';"/>
        <axis name="child" nodeTest="element(Q{}date)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='date';"/>
       </sequence>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="0" minImp="0" slots="0" flags="os" line="47" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}date)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='date';"/>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="49">
     <valueOf>
      <str val=" ("/>
     </valueOf>
     <applyT flags="i" bSlot="1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
     <valueOf flags="S">
      <str val=")"/>
     </valueOf>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id="4" binds="">
  <globalVariable name="Q{}terminalchars" type="xs:string" line="217" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="\.!\?;,:—…"/>
  </globalVariable>
 </co>
 <co id="5" binds="3">
  <template name="Q{}load-poem" flags="os" line="63" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" slots="1">
   <sequence role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="64">
    <param name="where" slot="0" flags="r" as="xs:anyURI">
     <treat role="conversion" as="xs:anyURI" jsTest="return SaxonJS.U.Atomic.anyURI.matches(item);" diag="8|0|XTTE0590|where">
      <check card="1" diag="8|0|XTTE0590|where">
       <cvUntyped to="xs:anyURI">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <applyT line="65" flags="t" bSlot="0">
     <fn role="select" name="document">
      <varRef name="where" slot="0"/>
     </fn>
    </applyT>
   </sequence>
  </template>
 </co>
 <co id="6" binds="7 7 7 7 7 6 7">
  <mode name="Q{}pause" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="1.0" seq="12" rank="2" minImp="0" slots="0" flags="os" as="xs:integer" line="234" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
     <axis vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="234" name="attribute" nodeTest="attribute(Q{}data-pause)" jsTest="return item.name=='data-pause'"/>
    </p.withPredicate>
    <cvUntyped role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="235" to="xs:integer">
     <cast as="xs:untypedAtomic" emptiable="0">
      <fn name="string">
       <convert from="xs:integer" to="xs:string">
        <cast as="xs:integer" emptiable="1">
         <data>
          <axis name="attribute" nodeTest="attribute(Q{}data-pause)" jsTest="return item.name=='data-pause'"/>
         </data>
        </cast>
       </convert>
      </fn>
     </cast>
    </cvUntyped>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="11" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="232" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.genNode role="match" type="element()">
     <filter vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="232" flags="p">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
      <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="0">
       <dot type="element()"/>
       <str val="l"/>
      </ufCall>
     </filter>
    </p.genNode>
    <int role="action" val="3"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="231" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.genNode role="match" type="element()">
     <filter vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="231" flags="p">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
      <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="1">
       <dot type="element()"/>
       <str val="verse-para"/>
      </ufCall>
     </filter>
    </p.genNode>
    <int role="action" val="8"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="230" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.genNode role="match" type="element()">
     <filter vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="230" flags="p">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
      <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="2">
       <dot type="element()"/>
       <str val="stanza"/>
      </ufCall>
     </filter>
    </p.genNode>
    <int role="action" val="12"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="13" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="241" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.genNode role="match" type="element(Q{}span)">
     <filter vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="241" flags="p">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';"/>
      </slash>
      <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="3">
       <dot type="element(Q{}span)"/>
       <str val="phr"/>
      </ufCall>
     </filter>
    </p.genNode>
    <treat role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="242" as="xs:integer" jsTest="return SaxonJS.U.Atomic.integer.matches(item);" diag="7|0|XTTE0505|match=&#34;span[XJS:has-class(.,'phr')]&#34; mode=&#34;pause&#34;">
     <check card="1" diag="7|0|XTTE0505|match=&#34;span[XJS:has-class(.,'phr')]&#34; mode=&#34;pause&#34;">
      <cvUntyped to="xs:integer">
       <sequence>
        <choose>
         <is op="is">
          <dot type="element(Q{}span)"/>
          <slash>
           <root/>
           <first>
            <filter flags="p">
             <axis name="descendant" nodeTest="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';"/>
             <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="4" eval="7 0">
              <dot type="element(Q{}span)"/>
              <str val="phr"/>
             </ufCall>
            </filter>
           </first>
          </slash>
         </is>
         <atomic val="0" type="xs:untypedAtomic"/>
        </choose>
        <data line="243">
         <applyT mode="Q{}pause" flags="t" bSlot="5">
          <slash role="select" simple="1">
           <first>
            <filter flags="p">
             <slash simple="1">
              <dot type="element(Q{}span)"/>
              <axis name="preceding" nodeTest="element(Q{}span)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='span';"/>
             </slash>
             <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="6" eval="7 0">
              <dot type="element(Q{}span)"/>
              <str val="phr"/>
             </ufCall>
            </filter>
           </first>
           <axis name="child" nodeTest="text()" jsTest="return item.nodeType==3;"/>
          </slash>
         </applyT>
        </data>
       </sequence>
      </cvUntyped>
     </check>
    </treat>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="8" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="227" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="227" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val="…"/>
     </fn>
    </p.withPredicate>
    <int role="action" val="5"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="7" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="226" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="226" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val="—"/>
     </fn>
    </p.withPredicate>
    <int role="action" val="4"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="6" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="225" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="225" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val=":"/>
     </fn>
    </p.withPredicate>
    <int role="action" val="5"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="5" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="224" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="224" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val=","/>
     </fn>
    </p.withPredicate>
    <int role="action" val="4"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="4" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="223" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="223" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val=";"/>
     </fn>
    </p.withPredicate>
    <int role="action" val="5"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="222" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="222" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val="?"/>
     </fn>
    </p.withPredicate>
    <int role="action" val="5"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="221" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="221" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val="!"/>
     </fn>
    </p.withPredicate>
    <int role="action" val="5"/>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="0" flags="os" as="xs:integer" line="220" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="220" name="ends-with">
      <cvUntyped to="xs:string">
       <data>
        <dot type="text()"/>
       </data>
      </cvUntyped>
      <str val="."/>
     </fn>
    </p.withPredicate>
    <int role="action" val="7"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="os" as="xs:integer" line="214" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
    <int role="action" val="0"/>
   </templateRule>
  </mode>
 </co>
 <co id="8" binds="">
  <template name="Q{}css" flags="os" line="246" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" slots="0">
   <valueOf role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="246">
    <str val="&#xA;         html, body { background-color: white }&#xA;         &#xA;         .tag { color: green; font-family: sans-serif; font-size: 80%; font-weight: bold }&#xA;         &#xA;         &#xA;         .pub { }&#xA;         &#xA;         .title { }&#xA;         &#xA;         .author { }&#xA;         &#xA;         .l { padding-left: 2em; text-indent: -2em }&#xA;         &#xA;         .l * { display: inline }&#xA;         &#xA;         span.phr {transition: color 1s ease-in;&#xA;              -moz-transition: color 1s ease-in;&#xA;              -webkit-transition: color 1s ease-in; }&#xA;         &#xA;         .ON { font-style: italic; font-weight: bold }&#xA;         &#xA;         .hidden { color: white }&#xA;         &#xA;         #xmljellysandwich_footer { clear: both; width: 100%; font-size: 80%;&#xA;          border-top: thin solid black; padding-top: 1em;&#xA;          font-family: 'Roboto Slab', sans-serif }&#xA;         &#xA;         #xmljellysandwich_directory {&#xA;           top: 1em; right: 1em; position: fixed }&#xA;         &#xA;         .toc-entry { display: inline-block; margin: 0em }&#xA;         .toc-entry:before { content: &#34; ⬥ &#34; }&#xA;         .toc-entry:first-child:before { content: &#34;&#34; }&#xA;         &#xA;         &#xA;   "/>
   </valueOf>
  </template>
 </co>
 <co id="9" binds="7 5">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="0" rank="0" minImp="0" slots="1" flags="os" line="53" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.genNode role="match" type="element()">
     <filter vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="53" flags="p">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
      </slash>
      <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="0">
       <dot type="element()"/>
       <str val="toc-entry"/>
      </ufCall>
     </filter>
    </p.genNode>
    <let role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="54" var="where" as="xs:anyURI?" slot="0" eval="8">
     <fn name="resolve-uri">
      <cvUntyped to="xs:string">
       <data>
        <axis name="attribute" nodeTest="attribute(Q{}data-src)" jsTest="return item.name=='data-src'"/>
       </data>
      </cvUntyped>
     </fn>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="56" name="ixsl:schedule-action" type="item()*">
      <int val="0"/>
      <fn name="string">
       <convert from="xs:anyURI" to="xs:string">
        <varRef name="where" slot="0"/>
       </convert>
      </fn>
      <callT line="57" name="load-poem" bSlot="1">
       <withParam name="where" flags="c" as="xs:anyURI?">
        <check line="58" card="1" diag="8|0||where">
         <varRef name="where" slot="0"/>
        </check>
       </withParam>
      </callT>
     </ifCall>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="1" binds="6 0 1">
  <mode name="Q{}spill" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="2" rank="2" minImp="0" slots="0" flags="os" line="203" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
     <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="203" name="not">
      <gcEE op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
       <homCheck>
        <slash>
         <fn name="reverse">
          <axis name="ancestor-or-self" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         </fn>
         <forEach line="315">
          <fn name="tokenize">
           <cvUntyped to="xs:string">
            <data>
             <slash line="203" simple="1">
              <dot type="element()"/>
              <axis line="315" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
             </slash>
            </data>
           </cvUntyped>
           <str val="\s+"/>
           <str val=""/>
          </fn>
          <fn name="lower-case">
           <dot type="xs:string"/>
          </fn>
         </forEach>
        </slash>
       </homCheck>
       <str val="verse"/>
      </gcEE>
     </fn>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.2" seq="0" rank="1" minImp="0" slots="1" flags="os" line="183" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1;"/>
    <let role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="185" var="pause" as="document-node()" slot="0" eval="7">
     <doc line="186" base="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" validation="preserve">
      <applyT mode="Q{}pause" bSlot="0">
       <dot role="select" type="element()"/>
      </applyT>
     </doc>
     <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" line="191" name="ixsl:schedule-action" type="item()*">
      <arith line="189" op="+" calc="i+i">
       <cast as="xs:integer" emptiable="0">
        <arith op="*" calc="d*d">
         <cvUntyped to="xs:double">
          <data>
           <varRef name="pause" slot="0"/>
          </data>
         </cvUntyped>
         <int val="360"/>
        </arith>
       </cast>
       <int val="1"/>
      </arith>
      <empty/>
      <callT line="192" name="show" bSlot="1"/>
     </ifCall>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="1" rank="0" minImp="0" slots="0" flags="os" line="198" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==1 || item.nodeType==3 || item.nodeType==7 || item.nodeType==8);"/>
    <applyT role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="199" mode="Q{}spill" flags="t" bSlot="2">
     <first role="select">
      <union op="|">
       <axis name="child" nodeTest="node()" jsTest="return SaxonJS.U.isNode(item);"/>
       <axis name="following" nodeTest="node()" jsTest="return SaxonJS.U.isNode(item);"/>
      </union>
     </first>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="10" binds="4 4">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg155608025" type="xs:string" line="119" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <fn vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="119" name="concat">
    <str val="[^"/>
    <gVarRef name="Q{}terminalchars" bSlot="0"/>
    <str val="]*["/>
    <gVarRef name="Q{}terminalchars" bSlot="1"/>
    <str val="]"/>
   </fn>
  </globalVariable>
 </co>
 <co id="7" binds="">
  <function name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" line="318" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" eval="7" flags="pU" as="item()*" slots="2">
   <arg name="who" as="element()"/>
   <arg name="ilk" as="xs:string+"/>
   <gcEE role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="321" op="=" card="M:N" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
    <varRef name="ilk" slot="1"/>
    <forEach line="315">
     <fn name="tokenize">
      <cvUntyped to="xs:string">
       <data>
        <slash line="321" simple="1">
         <varRef name="who" slot="0"/>
         <axis line="315" name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
        </slash>
       </data>
      </cvUntyped>
      <str val="\s+"/>
      <str val=""/>
     </fn>
     <fn name="lower-case">
      <dot type="xs:string"/>
     </fn>
    </forEach>
   </gcEE>
  </function>
 </co>
 <co id="11" binds="">
  <function name="Q{http://github.com/wendellpiez/XMLjellysandwich}classes" line="313" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" eval="3" flags="pU" as="item()*" slots="1">
   <arg name="who" as="element()"/>
   <forEach role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="315">
    <fn name="tokenize">
     <cvUntyped to="xs:string">
      <data>
       <slash simple="1">
        <varRef name="who" slot="0"/>
        <axis name="attribute" nodeTest="attribute(Q{}class)" jsTest="return item.name=='class'"/>
       </slash>
      </data>
     </cvUntyped>
     <str val="\s+"/>
     <str val=""/>
    </fn>
    <fn name="lower-case">
     <dot type="xs:string"/>
    </fn>
   </forEach>
  </function>
 </co>
 <co id="12" binds="8 2">
  <template name="Q{}xmljellysandwich_pack" flags="os" line="24" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" slots="0">
   <sequence role="body" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="26">
    <resultDoc global="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;" local="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;">
     <str role="href" val="#xmljellysandwich_css"/>
     <callT role="content" line="27" name="css" bSlot="0"/>
    </resultDoc>
    <resultDoc line="29" global="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;" local="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;">
     <str role="href" val="#xmljellysandwich_directory"/>
     <applyT role="content" line="31" mode="Q{}toc" flags="i" bSlot="1">
      <slash role="select" simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="13|0|XTTE0510|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="node()" jsTest="return true;"/>
      </slash>
     </applyT>
    </resultDoc>
   </sequence>
  </template>
 </co>
 <co id="3" binds="3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 7 3 3 3 10">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="0.0" seq="12" rank="0" minImp="0" slots="0" flags="os" line="164" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}l)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='l';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="165" name="p">
     <sequence>
      <att name="class" flags="l">
       <str val="l hidden"/>
      </att>
      <applyT line="166" bSlot="0">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="167" flags="i" bSlot="1">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="1" minImp="0" slots="0" flags="os" line="152" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='title';"/>
     <p.nodeTest test="element(Q{}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='source';"/>
    </p.withUpper>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="153" name="i">
     <sequence>
      <att name="class" flags="l">
       <str val="title"/>
      </att>
      <applyT line="154" flags="i" bSlot="2">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="0" flags="os" line="82" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='title';"/>
     <p.nodeTest test="element(Q{}pub)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='pub';"/>
    </p.withUpper>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="84" name="h1">
     <applyT flags="i" bSlot="3">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="0" minImp="0" slots="0" flags="os" line="158" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='title';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="159" name="p">
     <sequence>
      <att name="class" flags="l">
       <fn name="local-name">
        <dot type="element()"/>
       </fn>
      </att>
      <applyT line="160" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="13" rank="0" minImp="0" slots="0" flags="os" line="171" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}i)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='i';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="172" name="span">
     <sequence>
      <att name="class" flags="l">
       <str val="i"/>
      </att>
      <applyT line="173" flags="i" bSlot="5">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="4" rank="1" minImp="0" slots="0" flags="os" line="101" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='style';"/>
     <p.nodeTest test="element(Q{}pub)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='pub';"/>
    </p.withUpper>
    <resultDoc role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="102" global="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;" local="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
     <str role="href" val="#versifier_css"/>
     <applyT role="content" line="103" flags="i" bSlot="6">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </resultDoc>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="9" rank="0" minImp="0" slots="0" flags="os" line="145" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}stanza)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='stanza';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="146" name="div">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <str val=" hidden"/>
       </fn>
      </att>
      <applyT line="147" bSlot="7">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="148" flags="i" bSlot="8">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="0" minImp="0" slots="0" flags="os" line="69" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}pub)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='pub';"/>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="70">
     <resultDoc global="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;" local="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
      <str role="href" val="#xmljellysandwich_header"/>
      <sequence role="content" line="71">
       <elem name="h3">
        <valueOf flags="l">
         <str val="Versifier 2018"/>
        </valueOf>
       </elem>
       <applyT line="72" bSlot="9">
        <sequence role="select">
         <axis name="child" nodeTest="element(Q{}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='title';"/>
         <axis name="child" nodeTest="element(Q{}author)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='author';"/>
         <axis name="child" nodeTest="element(Q{}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='source';"/>
        </sequence>
       </applyT>
      </sequence>
     </resultDoc>
     <applyT line="75" flags="t" bSlot="10">
      <sequence role="select">
       <axis name="child" nodeTest="element(Q{}style)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='style';"/>
       <axis name="child" nodeTest="element(Q{}verse)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='verse';"/>
      </sequence>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="14" rank="0" minImp="0" slots="0" flags="os" line="177" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}love)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='love';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="178" name="span">
     <sequence>
      <att name="class" flags="l">
       <str val="love"/>
      </att>
      <applyT line="179" flags="i" bSlot="11">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="os" line="94" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='source';"/>
     <p.nodeTest test="element(Q{}pub)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='pub';"/>
    </p.withUpper>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="96" name="h3">
     <sequence>
      <applyT flags="i" bSlot="12">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
      <forEach line="97">
       <slash>
        <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType==9||item.nodeType==11||item.nodeType==1);"/>
        <axis name="child" nodeTest="element(Q{}date)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='date';"/>
       </slash>
       <sequence>
        <valueOf flags="l">
         <str val=" ("/>
        </valueOf>
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{}date)"/>
          </data>
         </convert>
        </valueOf>
        <valueOf flags="Sl">
         <str val=")"/>
        </valueOf>
       </sequence>
      </forEach>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="0" minImp="0" slots="0" flags="os" line="158" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='source';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="159" name="p">
     <sequence>
      <att name="class" flags="l">
       <fn name="local-name">
        <dot type="element()"/>
       </fn>
      </att>
      <applyT line="160" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="0" minImp="0" slots="0" flags="os" line="158" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}date)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='date';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="159" name="p">
     <sequence>
      <att name="class" flags="l">
       <fn name="local-name">
        <dot type="element()"/>
       </fn>
      </att>
      <applyT line="160" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="5" rank="1" minImp="0" slots="0" flags="os" line="107" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}verse)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='verse';"/>
     <p.nodeTest test="element(Q{}pub)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='pub';"/>
    </p.withUpper>
    <sequence role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="108">
     <resultDoc global="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;" local="#&#xA;#Wed Nov 29 17:42:21 EST 2017&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
      <str role="href" val="#xmljellysandwich_body"/>
      <elem role="content" line="109" name="div">
       <sequence>
        <att name="class" flags="l">
         <str val="verse"/>
        </att>
        <att name="id" flags="l">
         <fn name="replace">
          <fn name="document-uri">
           <root/>
          </fn>
          <str val="^.*/|\..*$"/>
          <str val=""/>
          <str val=""/>
         </fn>
        </att>
        <applyT line="110" flags="i" bSlot="13">
         <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
        </applyT>
       </sequence>
      </elem>
     </resultDoc>
     <applyT line="114" mode="Q{}spill" flags="t" bSlot="14">
      <docOrder role="select" intra="1">
       <slash>
        <slash simple="1">
         <ifCall xmlns:ixsl="http://saxonica.com/ns/interactiveXSLT" name="ixsl:page" type="document-node()?"/>
         <axis name="descendant-or-self" nodeTest="node()" jsTest="return true;"/>
        </slash>
        <filter flags="p">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType==1;"/>
         <ufCall name="Q{http://github.com/wendellpiez/XMLjellysandwich}has-class" tailCall="false" bSlot="15" eval="7 0">
          <dot type="element()"/>
          <str val="verse"/>
         </ufCall>
        </filter>
       </slash>
      </docOrder>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="8" rank="0" minImp="0" slots="0" flags="os" line="138" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}verse)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='verse';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="139" name="div">
     <sequence>
      <att name="class" flags="l">
       <str val="verse"/>
      </att>
      <applyT line="140" bSlot="16">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="141" flags="i" bSlot="17">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="9" rank="0" minImp="0" slots="0" flags="os" line="145" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}verse-para)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='verse-para';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="146" name="div">
     <sequence>
      <att name="class" flags="l">
       <fn name="concat">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <str val=" hidden"/>
       </fn>
      </att>
      <applyT line="147" bSlot="7">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <applyT line="148" flags="i" bSlot="8">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="1" minImp="0" slots="0" flags="os" line="88" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{}author)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='author';"/>
     <p.nodeTest test="element(Q{}pub)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='pub';"/>
    </p.withUpper>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="90" name="h2">
     <applyT flags="i" bSlot="18">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="11" rank="0" minImp="0" slots="0" flags="os" line="158" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="element(Q{}author)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='author';"/>
    <elem role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="159" name="p">
     <sequence>
      <att name="class" flags="l">
       <fn name="local-name">
        <dot type="element()"/>
       </fn>
      </att>
      <applyT line="160" flags="i" bSlot="4">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="7" rank="0" minImp="0" slots="0" flags="os" line="134" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.nodeTest role="match" test="attribute(Q{}pause)" jsTest="return SaxonJS.U.isAttr(item) &amp;&amp; item.name=='pause'"/>
    <att role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="135" name="data-pause">
     <convert from="xs:untypedAtomic" to="xs:string">
      <data>
       <dot type="attribute(Q{}pause)"/>
      </data>
     </convert>
    </att>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="6" rank="1" minImp="0" slots="0" flags="os" line="118" module="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl">
    <p.withUpper role="match" axis="ancestor" upFirst="false">
     <p.nodeTest test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==3;"/>
     <p.nodeTest test="element(Q{}l)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType==1 &amp;&amp; q.uri==''&amp;&amp;q.local=='l';"/>
    </p.withUpper>
    <analyzeString role="action" vn="31" baseUri="file:/home/wendell/public_html/XMLjellysandwich/docs/Versifier/versifier.xsl" ns="xsl=http://www.w3.org/1999/XSL/Transform XJS=http://github.com/wendellpiez/XMLjellysandwich ixsl=http://saxonica.com/ns/interactiveXSLT xs=http://www.w3.org/2001/XMLSchema" line="119">
     <cvUntyped role="select" to="xs:string">
      <data>
       <dot type="text()"/>
      </data>
     </cvUntyped>
     <gVarRef role="regex" name="Q{http://saxon.sf.net/generated-variable}gg155608025" bSlot="19"/>
     <str role="flags" val=""/>
     <elem role="matching" line="121" name="span">
      <sequence>
       <att name="class" flags="l">
        <str val="phr hidden"/>
       </att>
       <valueOf line="122" flags="l">
        <dot type="xs:string"/>
       </valueOf>
      </sequence>
     </elem>
     <elem role="nonMatching" line="126" name="span">
      <sequence>
       <att name="class" flags="l">
        <str val="phr hidden"/>
       </att>
       <valueOf line="127" flags="l">
        <dot type="xs:string"/>
       </valueOf>
      </sequence>
     </elem>
    </analyzeString>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
 </output>
 <decimalFormat decimal-separator="46" grouping-separator="44" digit="35" minus-sign="45" percent="37" per-mille="8240" zero-digit="48" exponent-separator="101" pattern-separator="59" infinity="Infinity" NaN="NaN"/>
</package>
<?Σ 6e2a1784?>
